int PID(int error_new)
{
//PID parameters
double Kp = 1//proportion term
double Kd = 0.01// derivative
double Ki = 0.1// integral
double Tsampling = 0.001
static int error_old = 0;
static double integral_old = 0;
int controller_out;

integral_new = integral_old + Ki*(error_new + error_old)*Tsampling/2 // Area of the trapezoid
if((integral_new > integral_max) || (integral_new < integral_min))
integral_new = integral_old;

controller_out = Kp*error_new + Kd*(error_new-error_old)/Tsampling + integral_new;

integral_old = integral_new;
error_old = error_new;

return controller_out; 
}


#define alpha 0.01
double filter_out_new;
static double filter_out_old = 0;
unsigned int adc_input_new;
static unsigned int adc_input_old = 0;

adc_input_new = ADC1BUF0;// depends on application


filter_out_new = alpha * adc_input_old + (1-alpha)*filter_old;

filter_out_old = filter_out_new;//this is the filtered analog signal output (error_new = reference - filter_out_new)
adc_input_old = adc_input_new;
